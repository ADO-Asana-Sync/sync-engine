# Run normally:
# - docker compose up --build --remove-orphans
# Development with watch:
# - docker compose up --watch --build --remove-orphans
# Development for local debug:
# - docker compose up --build --remove-orphans --scale web-ui=0 --scale sync=0
name: sync
services:
  sync:
    image: ado-asana-sync_sync:latest
    build:
      context: ../
      dockerfile: cmd/sync/Dockerfile
    environment:
      ADO_ORG_URL: ${ADO_ORG_URL}
      ADO_PAT: ${ADO_PAT}
      ASANA_PAT: ${ASANA_PAT}
      MONGO_URI: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017"
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      SLEEP_TIME: ${SLEEP_TIME}
      UPTRACE_DSN: ${UPTRACE_DSN}
      UPTRACE_ENVIRONMENT: ${UPTRACE_ENVIRONMENT}
    develop:
      watch:
        - action: rebuild
          path: ../cmd/sync
        - action: rebuild
          path: ../internal
    # restart: unless-stopped

  web-ui:
    image: ado-asana-sync_web-ui:latest
    build:
      context: ../
      dockerfile: cmd/web-ui/Dockerfile
    environment:
      ADO_ORG_URL: ${ADO_ORG_URL}
      ADO_PAT: ${ADO_PAT}
      ASANA_PAT: ${ASANA_PAT}
      MONGO_URI: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017"
      MONGO_MAX_POOL_SIZE: ${MONGO_MAX_POOL_SIZE}
      SERVER_PORT: ${SERVER_PORT}
      UPTRACE_DSN: ${UPTRACE_DSN}
      UPTRACE_ENVIRONMENT: ${UPTRACE_ENVIRONMENT}
    develop:
      watch:
        - action: rebuild
          path: ../cmd/web-ui
          ignore:
            - templates
            - static
        - action: rebuild
          path: ../internal
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - ../cmd/web-ui/static:/app/static
      - ../cmd/web-ui/templates:/app/templates
    # restart: unless-stopped

  mongo:
    image: mongo:4
    environment:
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
    ports:
      - 27017:27017
    restart: unless-stopped
    volumes:
      - ./data/mongo:/data/db
    healthcheck: {
        test: [
          "CMD",
          "mongo",
          "--eval",
          "db.adminCommand('ping')"
        ],
        interval: "10s",
        timeout: "5s",
        retries: 5,
        start_period: "30s"
      }

  mongo-express:
    image: mongo-express:1-20
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      ME_CONFIG_BASICAUTH_PASSWORD: "${MONGO_EXPRESS_ADMIN_PASSWORD}"
      ME_CONFIG_BASICAUTH_USERNAME: "${MONGO_EXPRESS_ADMIN_USERNAME}"
      ME_CONFIG_BASICAUTH_ENABLED: "true"
      ME_CONFIG_MONGODB_AUTH_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      ME_CONFIG_MONGODB_AUTH_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017"
    ports:
      - 8581:8081
    restart: unless-stopped
